@{
    ViewBag.Title = "Periodic Report";
    ViewBag.PageDescription = "Summary of Product Wise Gross Sales for Selected Period";
}

@section Head {
    <link rel="stylesheet" href="~/Scripts/datepicker/datepicker3.css">
    <link rel="stylesheet" href="~/Scripts/daterangepicker/daterangepicker-bs3.css">
    <link rel="stylesheet" href="~/Scripts/datatables/dataTables.bootstrap.css" />
    <script src="~/Scripts/daterangepicker/moment.min.js"></script>
    <script src="~/Scripts/daterangepicker/daterangepicker.js"></script>
    <script src="~/Scripts/datepicker/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/datatables/dataTables.bootstrap.min.js"></script>

}


@*@section ContentHeader {
    <h1>@ViewBag.Title<small>@ViewBag.PageDescription</small></h1>
}*@

<div class="row">
    <div class="box-body">
        @Html.Partial("_ReportInput", new ViewDataDictionary { { "id", "rep_date" }, { "val", ViewBag.begin_date }, { "btn_id", "ref_btn" }, { "col", "col-sm-4" } })
        <div id="detail_data">
            @Html.Partial(MVC.Views.BasicSamples.Grids.DatatableGrid._PeriodicTable)
        </div>
    </div>
</div>

<script type="text/javascript">

    function drawDataTable() {
        $('#dt_detail').dataTable({
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-4'l><'col-xs-12 col-sm-4'T><'col-sm-4 col-xs-6 hidden-xs'f>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "responsive": true,
            "bPaginate": true,
            "searching": false,
            "order": [[0, 'asc']],
            "stateSave": false,
            "autoWidth": false,
            "oTableTools": {
                "sRowSelect": "os",
                "aButtons": [
                "xls",
                    {
                        "sExtends": "pdf",
                        "sTitle": "Sample_PDF",
                        "sPdfMessage": "Sample Summary Report",
                        "sPdfSize": "letter"
                    },
                    {
                        "sExtends": "print",
                        "sMessage": "Generated by Serene <i>(press Esc to close)</i>"
                    }
                ],
                "sSwfPath": "/Scripts/plugins/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "drawCallback": function ( settings ) {
                var api = this.api();
                var rows = api.rows( {page:'current'} ).nodes();
                var last=null;
                var colonne = api.row(0).data().length;
                var totale = new Array();
                totale['Totale']= new Array();
                var groupid = -1;
                var subtotale = new Array();

                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                api.column(0, {page:'current'} ).data().each( function ( group, i ) {
                    if ( last !== group ) {
                        groupid++;
                        $(rows).eq( i ).before(
                            '<tr class="group"><td>'+group+'</td></tr>'
                        );
                        last = group;
                    }


                    val = api.row(api.row($(rows).eq( i )).index()).data();      //current order index
                    $.each(val,function(index2,val2){
                        if (typeof subtotale[groupid] =='undefined'){
                            subtotale[groupid] = new Array();
                        }
                        if (typeof subtotale[groupid][index2] =='undefined'){
                            subtotale[groupid][index2] = 0;
                        }
                        if (typeof totale['Totale'][index2] =='undefined'){ totale['Totale'][index2] = 0; }

                        valore = Number(val2.replace('€', "").replace('.', "").replace(',', "."));
                        //console.log("valore %d groupid %d index2 %d", valore, groupid, index2);
                        //subtotale[groupid][index2] += valore;
                        //totale['Totale'][index2] += valore;
                        subtotale[groupid][index2] += intVal(val2);
                        totale['Totale'][index2] += intVal(val2);
                    });



                } );
                $('tbody').find('.group').each(function (i,v) {
                    var rowCount = $(this).nextUntil('.group').length;
                    $(this).find('td:first').append($('<span />', { 'class': 'rowCount-grid' }).append($('<b />', { 'text': ' ('+rowCount+')' })));
                    var subtd = '<td></td>';
                    for (var a=2;a<colonne;a++)
                    {
                        //subtd += '<td>'+subtotale[i][a]+' OUT OF '+totale['Totale'][a]+ ' ('+ Math.round(subtotale[i][a]*100/totale['Totale'][a],2) +'%) '+'</td>';
                        if (totale['Totale'][a] == 0)
                            subtd += '<td></td>';
                        else
                            subtd += '<td align="right">' + subtotale[i][a] + ' (' + Math.round(subtotale[i][a] * 100 / totale['Totale'][a], 2) + '%) ' + '</td>';
                    }
                    $(this).append(subtd);
                });

            },
            "footerCallback": function (row, data, start, end, display) {
                var api = this.api(), data;

                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                        i : 0;
                };

                var pad = function (n, width, z) {
                    z = z || '0';
                    n = n + '';
                    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
                };

                // Total over all pages
                var total_gross_Sale = api
                    .column(2)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }
                );

                $(api.column(2).footer()).html(total_gross_Sale.toFixed(2));
                

            }
        });

        // Order by the grouping
        //$('#dt_detail.tbody').on('click', 'tr.group', function () {
        //    var currentOrder = table.order()[0];
        //    if (currentOrder[0] === 0 && currentOrder[1] === 'asc') {
        //        table.order([0, 'desc']).draw();
        //    }
        //    else {
        //        table.order([0, 'asc']).draw();
        //    }
        //});
    }
</script>

@section PageInitScript {
    $('#rep_date').daterangepicker({ timePicker: false,  format: 'DD/MM/YYYY' });
    drawDataTable();

    $('.btn_content').on('click', function () {
    $.ajax({
    url: "/BasicSamples/GetPeriodData",
    type: "GET",
    data: {
    RangeDate: $('#rep_date').val()
    },
    beforeSend: function () {
    $('#loading').show();
    $('#ref_btn').hide();
    }
    })
    .done(function (partialViewResult) {
    $('#loading').hide();
    $('#ref_btn').show();
    $("#detail_data").html(partialViewResult);
    drawDataTable();
    });
    });


}